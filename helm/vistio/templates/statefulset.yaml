apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: {{ template "fullname" . }}
  labels:
    heritage: {{ .Release.Service }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
    app: {{ template "name" . }}
    release: {{ .Release.Name }}
  {{- if .Values.environment }}
    environment: {{ .Values.environment }}
  {{- end }}
spec:
  replicas: {{ .Values.replicaCount }}
  serviceName: vistio
  template:
    metadata:
      labels:
        app: {{ template "name" . }}
        release: {{ .Release.Name }}
      {{- if .Values.environment }}
        environment: {{ .Values.environment }}
      {{- end }}
    spec:
      containers:
        - name: vistio
          image: {{ .Values.vistio.image.repository }}:{{ .Values.vistio.image.tag }}
          imagePullPolicy: {{ .Values.vistio.image.pullPolicy }}
          args:
            - --config.file=/etc/vistio/vistio.yaml
            - --log.level={{ .Values.vistio.log.level }}
            - --storage.path=/var/vistio/data
            - --storage.retention={{ .Values.vistio.storage.retention }}
            - --cache.size={{ .Values.vistio.cache.size }}
            - --retrieval.scrape-interval={{ .Values.vistio.retrieval.scrapeInterval }}
            - --retrieval.scrape-timeout={{ .Values.vistio.retrieval.scrapeTimeout }}
            - --api.port={{ .Values.service.internalPort }}
          ports:
            - containerPort: {{ .Values.service.internalPort }}
          livenessProbe:
            httpGet:
              path: /
              port: {{ .Values.service.internalPort }}
            initialDelaySeconds: 30
            timeoutSeconds: 30
          readinessProbe:
            httpGet:
              path: /
              port: {{ .Values.service.internalPort }}
            initialDelaySeconds: 30
            timeoutSeconds: 30
          resources:
{{ toYaml .Values.vistio.resources | indent 12 }}
          volumeMounts:
            - name: config
              mountPath: /etc/vistio
            - name: vistio-db
              mountPath: /var/vistio/data
              subPath: vistio-db
        - name: reloader
          image: {{ .Values.reloader.image.repository }}:{{ .Values.reloader.image.tag }}
          imagePullPolicy: {{ .Values.reloader.image.pullPolicy }}
          args:
            - --config.vistio-reload-url=http://localhost:{{ .Values.service.internalPort }}/reload
            - --config.vistio-config-dir=/etc/vistio
            - --config.log-level=info
          resources:
{{ toYaml .Values.reloader.resources | indent 12 }}
          volumeMounts:
            - name: config
              mountPath: /etc/vistio
      volumes:
        - name: config
          configMap:
            name: {{ template "fullname" . }}-config
  volumeClaimTemplates:
  - metadata:
      annotations:
        volume.beta.kubernetes.io/storage-class: {{ .Values.storage.class }}
      name: vistio-db
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: {{ .Values.storage.size }}